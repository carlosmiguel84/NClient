name: Test .NET Core project

inputs:
  target-framework:
    description: 'Target .NET Core'
    required: true
  solution:
    description: 'Solution/project path'
    required: true
    
runs:
  using: "composite"
  steps:
    - name: Set the required target .NET Core version
      run: |
        if [[ "${{ inputs.target-framework }}" == "netcoreapp3.1" ]]; then
          echo "dotnet-version=3.1.x" >> $GITHUB_ENV
        elif [[ "${{ inputs.target-framework }}" == "net5.0" ]]; then
          echo "dotnet-version=5.0.x" >> $GITHUB_ENV
        elif [[ "${{ inputs.target-framework }}" == "net6.0" ]]; then
          echo "dotnet-version=6.0.x" >> $GITHUB_ENV
        else
          echo "dotnet-version=5.0.x" >> $GITHUB_ENV
        fi
      shell: bash
    - name: Setup .NET Core ${{ env.dotnet-version }}
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.dotnet-version }}
    - name: Download build artifacts
      uses: actions/download-artifact@v2
      with:
        name: build-artifacts-${{ inputs.target-framework }}
    - name: Extract build artifacts
      run: tar -xvzf build-artifacts-${{ inputs.target-framework }}.tar.gz
      shell: bash
    - name: Test with ${{ inputs.target-framework }}
      uses: zyborg/dotnet-tests-report@v1
      with:
        project_path: ${{ inputs.solution }}
        no_build: true
        msbuild_verbosity: normal
        extra_test_parameters: '--framework ${{ inputs.target-framework }} --configuration Release'
        report_name: Test for ${{ inputs.target-framework }}
        report_title: Test for ${{ inputs.target-framework }}
        github_token: ${{ secrets.GITHUB_TOKEN }}
        gist_name: test_for_${{ inputs.target-framework }}.md
        gist_badge_label: 'Tests: %Counters_passed%/%Counters_total%'
        gist_token: ${{ secrets.GIST_TOKEN }}
      #run: dotnet test ${{ inputs.solution }} --framework ${{ inputs.target-framework }} --no-build --verbosity normal --configuration Release
      #shell: bash